
#DB테이블

# 시퀀스
create sequence review_seq;

# 제약조건
alter table pet_info
add constraint pet_info_fk foreign key(member_id) references member_info(member_id);

alter table review_reply
add constraint review_reply_fk foreign key(review_no) references review(review_no);

alter table resv_history
add constraint resv_history_fk foreign key(member_id) references job(member_id);
===================================아래 수정본====================================

#이용자테이블. #member_info 테이블 생성

drop table member_info; 
create table member_info(
	MEMBER_ID VARCHAR2(15) PRIMARY KEY,
	MEMBER_PASS VARCHAR2(15),
	MEMBER_NAME VARCHAR2(15),
	MEMBER_GENDER CHAR(1),
	MEMBER_EMAIL VARCHAR2(50),
	MEMBER_PHONE VARCHAR2(15),
	MEMBER_ADDR1 VARCHAR2(100),
	MEMBER_ADDR2 VARCHAR2(100),
	MEMBER_STATUS CHAR(1),
	MEMBER_STARTDATE DATE,
	MEMBER_ENDDATE DATE,
	USER_TYPE CHAR(1),
	MEMBER_BIRTHDATE DATE,
	HOSPITAL_NAME VARCHAR2(100),
	HOSPITAL_ADDR VARCHAR2(200)
);

# 펫시터 테이블
drop table sitter_info;
create table sitter_info(
	SITTER_ID VARCHAR2(15) PRIMARY KEY,
	SITTER_PASS VARCHAR2(15),
	SITTER_NAME VARCHAR2(15),
	SITTER_CODE CHAR(1),
	SITTER_GENDER CHAR(1),
	SITTER_EMAIL VARCHAR2(50),
	SITTER_PHONE VARCHAR2(15),
	SITTER_ADDR1 VARCHAR2(100),
	SITTER_ADDR2 VARCHAR2(100),
	SITTER_STARTDATE DATE,
	SITTER_ENDDATE DATE,
	SITTER_BIRTHDATE DATE,
	SERVICE_AREA VARCHAR2(100),
	SITTER_INFO VARCHAR2(500),
	VALID CHAR(1),
	SITTER_CERTIFICATE VARCHAR2(200),
	USER_TYPE CHAR(1),
	SMALL_CAREER NUMBER,
	MEDIUM_CAREER NUMBER,
	LARGE_CAREER NUMBER,
	CAT_CAREER NUMBER,
	SITTER_PHOTO VARCHAR2(50),
	SITTER_RATE NUMBER(2,1),
	SITTER_STATUS CHAR(1)
);

#pet_info 테이블. #반려동물테이블

drop table pet_info;
create table pet_info(
	PET_ID VARCHAR2(30) PRIMARY KEY,
	MEMBER_ID VARCHAR2(15),
	PET_NAME VARCHAR2(15),
	PET_GENDER CHAR(1),
	PET_CODE VARCHAR2(15),
	PET_KIND VARCHAR2(50),
	PET_BIRTHDATE DATE,
	PET_WEIGHT NUMBER,
	PET_SIZE CHAR(1),
	NEUTER CHAR(1),
	PET_PHOTO VARCHAR2(50),
	PET_NOTE VARCHAR2(500)
)



# 이용후기 테이블 (ReviewDTO)
    create table review(  
    review_no varchar2(15) primary key,
    member_id varchar2(15),  
    write_date_rv date,
    modify_date_rv date,
    review varchar2(200),
    resv_no varchar2(15),
    review_file varchar2(50),
    review_rate number(5)
    )
    
    
# 파일업로드 테이블 (ReviewFileDTO) 
    create table review_file(
    review_no varchar2(25) primary key,
    originalFilename varchar2(25),
    reviewFileno varchar2(25),
    storeFilename varchar2(25)
	);


 select m.review_file,m.review,r.*
 from member_info m, review r
  where m.member_id = r.member_id;

 select m.member_id,m.member_addr1,r.*
 from member_info m, review r
  where m.member_id = r.member_id;



 //펫테이블-리뷰테이블  + 펫테이블-파일업로드테이블 조인해서 사진가져오기
 select r.*,p.pet_photo,
 from pet_info p, review r,pet_file f
 where p.pet_id = r.review_no 
 and f.petphoto_no = p.pet_id
 
 

//펫사진 파일 테이블
  create table pet_file(
    pet_photo varchar2(25) primary key,
    originalFilename varchar2(25),
    storeFilename varchar2(25)
	);




create table sitter_info(
	user_type varchar2(3),
    sitter_id varchar2(15) primary key,
    sitter_pass varchar2(15),
    sitter_name varchar2(15),
	sitter_code char(1),
	sitter_gender char(1),
	sitter_email varchar2(50),
	sitter_phone varchar2(15),
	sitter_addr1 varchar2(50),
	sitter_addr2 varchar2(50),
	sitter_startdate date,
	sitter_enddate date,
	sitter_state char(1),
	sitter_birthdate date,
	service_area varchar2(50),
	sitter_info varchar2(200),
	valid char(1),
	small_career VARCHAR2(32),
	medium_career VARCHAR2(32),
	large_career VARCHAR2(32),
	cat_career VARCHAR2(32),
	sitter_photo VARCHAR2(32),
	sitter_certificate varchar2(15)
);

# 예약내역 테이블
create table resv_history(
    resv_no varchar2(20) primary key,
    member_id varchar2(15),
    pet_id varchar2(30) ,
    resv_date date,
    resv_change_date date,
    resv_state char(1),
    pay_method varchar2(15),
    visit_date date,
    visit_place VARCHAR2(15),
    service_starttime number(24),
    service_endtime number(24),
    service_time number(3),
    sitter_id varchar2(15),
    service_note varchar2(100),
    defulat_service char(1),
    bath_servie char(1),
    walk_service char(1),
    beauty_service char(1),
    total_price number,
    match_method varchar2(15),
    prefer_gender varchar2(15),
    prefer_size varchar2(15),
    service_request varchar2(200),
    visit_method varchar2(15),
    common_pass varchar2(15),
    home_pass varchar2(15),
    direct_meet varchar2(100),
    parking varchar2(100),
    supplies_place varchar2(100),
    cleaning_method varchar2(100),
    emergency_phone varchar2(15),
    pet1_reserved char(1),
    pet2_reserved char(1),
    pet3_reserved char(1)
    );


#이용후기 테이블
    create table review(
    review_no varchar2(15) primary key,
    resv_no varchar2(15),
    member_id varchar2(15),
    write_date_rv date,
	review varchar2(1000),
    REVIEW_RATE number(5),
    REVIEW_IMG varchar2(50)
);


#댓글테이블
	create table review_reply(
    reply_no varchar2(15) primary key,
    review_no varchar2(15),
    sitter_id varchar2(15),
    reply varchar2(100),
    write_date_rp date,
    modify_date_rp date
);



================================================================================================
# 쿼리문 정리
insert into pet_info
	(pet_id, member_id, pet_name,
	pet_gender, pet_code, pet_kind,
	pet_birthdate, pet_weight, pet_size,
	neuter, animalhospital_name, animalhospital_addr,
	pet_photo, pet_note, pet_number)
values
	('test', 'test', '단이',
	'2', '1', '진돗개',
	'2014-10-25', 1, 5,
	'Y', '헬로우동물병원', '연희로178',
	'tan.png', '단이는 엄청 순해요', '1')

insert into member_info
	(member_id, member_pass, member_name,
	member_gender, member_email, code)
values
	('test', 'test', '이지은',
	'2', 'leejieun@naver.com', 'B') → code 를 usertype 으로 변경하고, 'M' 으로 Setting 할 것 

----------  resv_history 에 삽입할 데이터
insert into resv_history(resv_no) values(01);
insert into resv_history(resv_no) values(02);
insert into resv_history(resv_no) values(03);
insert into resv_history(resv_no) values(04);
insert into resv_history(resv_no) values(05);
insert into resv_history(resv_no) values(06);
insert into resv_history(resv_no) values(07);
insert into resv_history(resv_no) values(08);
insert into resv_history(resv_no) values(09);

------- member_info에 삽입할 데이터
 insert into member_info(member_id,member_addr1,member_photo) values('park','서울시','profile_image1');
 insert into member_info(member_id,member_addr1,member_photo) values('lee','인천시','profile_image2');
 insert into member_info(member_id,member_addr1,member_photo) values('ji','수원시','profile_image3');
 insert into member_info(member_id,member_addr1,member_photo) values('moon','용인시','profile_image4');
 insert into member_info(member_id,member_addr1,member_photo) values('kang','김포시','profile_image5');
 insert into member_info(member_id,member_addr1,member_photo) values('kim','이천시','profile_image6');
 insert into member_info(member_id,member_addr1,member_photo) values('na','부천시','profile_image7');
 insert into member_info(member_id,member_addr1,member_photo) values('im','화성시','profile_image8');
 insert into member_info(member_id,member_addr1,member_photo) values('jun','안양시','profile_image9');

------ review 테이블에 삽입할 데이터  
================================================================================================
# mapper 쿼리문 정리
select * from pet_info p, member_info m
where m.member_id = p.member_id









