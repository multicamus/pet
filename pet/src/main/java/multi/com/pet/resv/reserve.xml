<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mutli.com.pet.resv">
	<select id="directlistAllgender" parameterType="Map" resultType="sitter">
		select * from sitter_info
		<where>
			<if test='code=="D" and size=="S"'>
					<![CDATA[						
							(sitter_code='D' or sitter_code='A')
							and small_career >= 5
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="A" and size=="S"'>
					<![CDATA[						
							(sitter_code='A')
							and small_career >= 5
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="D" and size=="M"'>
					<![CDATA[						
							(sitter_code='D' or sitter_code='A')
							and medium_career >= 5
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="A" and size=="M"'>
					<![CDATA[						
							(sitter_code='A')
							and medium_career >= 5
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="D" and size=="L"'>
					<![CDATA[						
							(sitter_code='D' or sitter_code='A')
							and large_career >= 5
						]]>
					and service_area LIKE '%' || #{shortAddr} || '%'	
			</if>
			<if test='code=="A" and size=="L"'>
					<![CDATA[						
							(sitter_code='A')
							and large_career >= 5
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="A" and size=="A"'>
					<![CDATA[						
							(sitter_code='A')
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="D" and size=="A"'>
					<![CDATA[						
							(sitter_code='D' or sitter_code='A')
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="C"'>
					<![CDATA[						
							(sitter_code='A' or sitter_code ='C')
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
		</where>
	</select>
	
	<select id="directlistBygender" parameterType="Map" resultType="sitter">
		select * from sitter_info
		<where>
			<if test='code=="D" and size=="S"'>
					<![CDATA[						
							(sitter_code='D' or sitter_code='A')
							and small_career >= 5
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="A" and size=="S"'>
					<![CDATA[						
							(sitter_code='A')
							and small_career >= 5
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="D" and size=="M"'>
					<![CDATA[						
							(sitter_code='D' or sitter_code='A')
							and medium_career >= 5
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="A" and size=="M"'>
					<![CDATA[						
							(sitter_code='A')
							and medium_career >= 5
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="D" and size=="L"'>
					<![CDATA[						
							(sitter_code='D' or sitter_code='A')
							and large_career >= 5
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="A" and size=="L"'>
					<![CDATA[						
							(sitter_code='A')
							and large_career >= 5
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="A" and size=="A"'>
					<![CDATA[						
							(sitter_code='A')
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="D" and size=="A"'>
					<![CDATA[						
							(sitter_code='D' or sitter_code='A')
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
			<if test='code=="C"'>
					<![CDATA[						
							(sitter_code='A' or sitter_code ='C')
							and sitter_gender = #{gender}
						]]>
						and service_area LIKE '%' || #{shortAddr} || '%'
			</if>
		</where>
	</select>
	
	<!-- 시터 id로 시터 정보 row 가져오기 -->
	<select id="readsitter" parameterType="String" resultType="sitter">
			select * from sitter_info
			where sitter_id = #{sitter_id}
	</select>
	
	<!-- 예약내역테이블에 예약정보 집어넣기 -->
	 <insert id="insert" parameterType="resv">
			insert into resv_history
			values(to_char(sysdate, 'YYYYMMDD')|| LPAD(resv_seq.nextval, 4, '0'), #{member_id}, #{pet_idlist}, #{pet_namelist}, to_char(sysdate,'yyyy-mm-dd hh24:mi'),
						  to_char(sysdate,'yyyy-mm-dd hh24:mi'), #{resv_status}, null, #{visit_date}, #{visit_place}, 
						#{service_starttime}, #{service_endtime}, #{service_time}, #{sitter_id}, #{service_note},
						#{default_service}, #{bath_service}, #{walk_service}, #{beauty_service}, #{total_price},
						#{match_method}, #{prefer_gender}, #{prefer_size}, #{visit_method}, #{common_pass},
						#{home_pass}, #{direct_meet}, #{parking}, #{supplies_place}, #{cleaning_method},
						#{emergency_phone}, #{pet_codelist}) 
	</insert> 
	
	<!-- 이용자id로 예약내역rows 가져오기 -->
	<select id="mbresvlist" parameterType="String" resultType="resv">
			select * from resv_history
			where member_id = #{member_id}
			order by resv_no desc
	</select>
	
	<!-- 시터id로 예약내역rows 가져오기  -->
	<select id="stresvlist" parameterType="String" resultType="resv">
			select * from resv_history
			where sitter_id = #{sitter_id}
			order by resv_no desc
	</select>
	<!-- 예약번호로 예약내역 row가져오기 -->
	<select id="resvread" parameterType="String" resultType="resv">
			select * from resv_history
			where resv_no = #{resv_no}
	</select>
	
	<!-- 기간내에 매칭승인을 못받으면 자동으로 취소되도록 update  -->
	<update id="changestatus">
			update resv_history
			set resv_status = 2,
			resv_change_date = to_char(visit_date, 'yyyy-mm-dd') || ' ' || LPAD(service_starttime-2, 2, '0') || ':00:00'
            <![CDATA[	
            where resv_status = 0					
			and to_char(visit_date, 'yyyy-mm-dd') || ' ' || LPAD(service_starttime, 2, '0') || ':00:00'
            < to_char(sysdate + 1/12 , 'YYYY-MM-DD HH24:MI:SS')
			]]>
	
	</update>
	<!-- 이용자가 결제취소할경우  -->
	<update id="mbcancelresv" parameterType="String">
			update resv_history
			set resv_status = 3,
			resv_change_date = to_char(sysdate, 'yyyy-mm-dd HH24:MI:SS')
			where resv_no=#{resv_no}
			
	</update>
	<!-- 펫시터가 승인거절할경우  -->
	<update id="stcancelresv" parameterType="String">
			update resv_history
			set resv_status = 4,
			resv_change_date = to_char(sysdate, 'yyyy-mm-dd HH24:MI:SS')
			where resv_no=#{resv_no}
	</update>
	
	<!-- 펫시터가 승인을 수락할 경우 -->
	<update id="approve" parameterType="String">
			update resv_history
			set resv_status = 1,
			resv_change_date = to_char(sysdate, 'yyyy-mm-dd HH24:MI:SS')
			where resv_no=#{resv_no}
	</update>
	<!-- 예약리스트를 매개변수로 받아서 각각의 예약내역의 이용후기 여부를 확인 -->
	<select id="checkreview" parameterType="java.util.List" resultType="String">
		select h.resv_no
		from resv_history h, review r
		where r.resv_no = h.resv_no and  r.resv_no	in
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">	
			#{item.resv_no}	
		</foreach>
	</select>
	
	<!-- 예약번호로 리뷰 읽기 -->
	<select id="readreview" parameterType="String" resultType="review2" >
		select * from review
		where resv_no = #{resv_no}	
	</select>
</mapper>

